server:
  port: 9527
spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_routes #路由的ID，没有固定的规则，但是要求唯一，建议配合服务名
#          uri: http://localhost:8001 #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service #动态路由，到eureka中获取微服务名为cloud-payment-service的服务，并实现负载均衡
          predicates:
            - Path=/payment/get/** #断言，路径匹配的进行路由
        - id: payment_route2
#          uri: http://localhost:8001  #静态路由，这样配置就写死了，难以扩展
          uri: lb://cloud-payment-service
          predicates:
            - Path=/payment/lb/**
#            - After=2020-03-31T19:35:54.532+08:00[Asia/Shanghai] #设定生效时间，After为在设定时间之后生效，Before为在设定时间之前生效，Between在设定时间之间生效
#            - Cookie=username,ccb  #要带有key为username，value为ccb的Cookie才可以访问，这里的value是一个正则表达式  curl http://localhost:9527/payment/lb --cookie "username:ccb"
#            - Header=X-Request-Id,\d+ #请求的Header要带有X-Request-Id这个参数，并且值要是数字(正)  curl http://localhost:9527/payment/lb -H "X-Request-Id:123"
#            - Host=**.ccb.com,**.jt.com #请求带有所规定的Host才可访问  curl http://localhost:9527/payment/lb -H "Host: www.ccb.com"
#            - Method=GET  #规定只有get方法可以访问
#            - Query=username,\d+  #http请求要带有username这个参数，且其值为整数才能路由 curl http://localhost:9527/payment/lb?username=123
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      # defaultZone: http://eureka7001:7001/eureka,http://eureka7003:7003/eureka,http://eureka7002:7002/eureka  #使用Eureka集群
      defaultZone: http://eureka7003:7003/eureka #使用单机版Eureka